@functions
{
    string GetExcerpt(IDocument post)
    {
        var excerpt = post.GetString(Statiq.Html.HtmlKeys.Excerpt);

        if (!string.IsNullOrWhiteSpace(excerpt))
        {
            excerpt = excerpt.RemoveEnd("</p>"); //remove final '</p>'
            var words = excerpt.Split().Take(15); //only interested in first 50 words, so add them to array
            excerpt = string.Join(" ", words); //rejoin the words as single string
            excerpt += $" ...</p>"; //add it back with some more goodies
        }

        return excerpt;
    }
}

@{
    var posts = Document.GetChildren();

    IDocument older = Document.GetDocument(Keys.Next);
    IDocument newer = Document.GetDocument(Keys.Previous);

    var firstPost = posts.FirstOrDefault();
    var list = posts.Skip(1).ToArray();
}

@if (firstPost != null)
{
    var excerpt = GetExcerpt(firstPost);
    <!--Lead Card-->
    <div class="lg:flex md:flex-1 h-full bg-white rounded rounded-b-none shadow-lg">
        @if (firstPost.GetString("Image") != null)
        {
            <div class="md:w-full lg:w-2/3 rounded-t">
                <img src="@firstPost.GetString("Image")" class="h-full w-full shadow" />
            </div>
        }

        <div class="md:w-full lg:w-1/3 lg:flex flex-col flex-grow flex-shrink">
            <div class="flex-1 bg-white rounded-t rounded-b-none overflow-hidden shadow-lg px-6 py-4">
                <div class="font-bold text-xl mb-2 truncate">
                    <a title="@firstPost.GetString("Title")" itemprop="url" href="@Context.GetLink(firstPost)">@firstPost.GetString("Title")</a>
                </div>
                <p class="w-full text-gray-600 text-xs md:text-sm">Published on @firstPost.GetString("Published")</p>
                <div class="text-gray-700 text-base">
                    @Html.Raw(excerpt)
                </div>
            </div>
        </div>
    </div>
    <!--/Lead Card-->
}

<!--Posts Container-->
<div class="md:flex flex-wrap justify-start lg:-mx-6 md:-mx-2 overflow-hidden">
    @foreach(var post in list)
    {
        var excerpt = GetExcerpt(post);
    
        <div class="w-full md:w-1/2 lg:w-1/3 lg:p-6 md:p-3 flex flex-col py-4">
            <div class="flex-1 bg-white rounded rounded-b-none overflow-hidden shadow-lg">
                @if (post.GetString("Image") != null)
                {
                    <div class="md:w-full lg:w-full rounded-t">
                        <img src="@post.GetString("Image")" class="h-64 w-full rounded-t" />
                    </div>
                }
                <div class="md:w-full lg:w-full lg:flex flex-col flex-grow flex-shrink px-6 py-4">
                    <div class="w-full font-bold text-xl text-gray-900 truncate">
                        <a itemprop="url" title="@post.GetString("Title")" href="@Context.GetLink(post).Substring(1)">@post.GetString("Title")</a>
                    </div>
                    <p class="w-full text-gray-600 text-xs md:text-sm">Published on @post.GetString("Published")</p>
                
                    <div class="text-gray-700 text-base">
                        @Html.Raw(excerpt)
                    </div>
                </div>
            </div>
            <meta itemprop="dateModified" content="@post.GetString("Published")">
        </div>
    }
</div>

@if (older != null || newer != null)
{
    <div class="w-full flex mb-2 text-teal-500">
        <div class="w-1/2">
            @if (newer != null)
            {
                <a href="@Context.GetLink(newer)" class="text-left p-4 float-left hover:text-teal-600">
                    <p class="text-lg flex items-center"><i class="fas fa-arrow-left pr-1"></i> Newer</p>
                </a>
            }
        </div>

        <div class="w-1/2">
            @if (older != null)
            {
                <a href="@Context.GetLink(older)" class="text-right p-4 float-right hover:text-teal-600">
                    <p class="text-lg flex items-center justify-end">Older <i class="fas fa-arrow-right pl-1"></i></p>
                </a>
            }
        </div>
    </div>
}